#!/usr/bin/env node

/**
 * Generate build-time Sentry config for Electron main process (and optional renderer).
 * Writes projects/flock-native/electron/sentry-config.js with DSNs resolved from env.
 *
 * Env vars:
 * - NATIVE_SENTRY_DSN_MAIN: DSN for Electron main process
 * - NATIVE_SENTRY_DSN: DSN for renderer (Angular) – optional
 */

const fs = require('fs');
const path = require('path');

const mainDsn = process.env.NATIVE_SENTRY_DSN_MAIN || '';
const rendererDsn = process.env.NATIVE_SENTRY_DSN || '';

const outDir = path.join('projects', 'flock-native', 'electron');
const outFile = path.join(outDir, 'sentry-config.js');

function ensureDirSync(dir) {
  if (!fs.existsSync(dir)) {
    fs.mkdirSync(dir, { recursive: true });
  }
}

ensureDirSync(outDir);

const fileContents = `
// Auto-generated by scripts/generate-sentry-config.js during CI/build
// Do not edit directly. DSNs are public identifiers and safe to ship.
module.exports = {
  mainDsn: ${JSON.stringify(mainDsn)},
  rendererDsn: ${JSON.stringify(rendererDsn)}
};
`;

fs.writeFileSync(outFile, fileContents, 'utf8');

const redact = (dsn) => (dsn ? dsn.replace(/:\/\//, '://').replace(/@.*/, '@…') : '(empty)');
console.log('✅ Generated Electron Sentry config at', outFile);
console.log('   mainDsn:', redact(mainDsn));
console.log('   rendererDsn:', redact(rendererDsn));
