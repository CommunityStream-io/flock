{
  "name": "flock",
  "version": "0.5.18",
  "description": "Migrate Instagram data to Bluesky with native desktop power",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/flock-mirage/flock.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/flock-mirage/flock/issues"
  },
  "homepage": "https://github.com/flock-mirage/flock#readme",
  "scripts": {
    "ng": "ng",
    "start": "ng serve flock-mirage",
    "build": "npx ng build",
    "build:shared": "ng build --project=shared",
    "watch": "ng build --watch --configuration development",
    "test": "ng test shared",
    "test:watch": "ng test shared --watch",
    "test:ci": "cross-env CI=true ng test shared --watch=false",
    "test:coverage": "cross-env CI=true ng test shared --watch=false --code-coverage",
    "test:e2e": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test-coverage --port=4200\" \"wait-on http://localhost:4200 && cross-env HEADLESS=true wdio run wdio.conf.ts\"",
    "test:e2e:ci": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env CI=true HEADLESS=true wdio run wdio.conf.ts\"",
    "coverage:all": "npm run test:coverage && npm run test:native:coverage",
    "test:shared": "ng test shared",
    "test:shared:watch": "ng test shared --watch",
    "test:shared:ci": "cross-env CI=true ng test shared",
    "test:native": "ng test flock-native",
    "test:native:watch": "ng test flock-native --watch",
    "test:native:ci": "cross-env CI=true ng test flock-native --watch=false",
    "test:native:coverage": "cross-env CI=true ng test flock-native --watch=false --code-coverage",
    "test:e2e:headless": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env HEADLESS=true wdio run wdio.conf.ts\"",
    "test:e2e:watch": "wdio run wdio.conf.ts --watch",
    "test:e2e:watch:headless": "cross-env HEADLESS=true wdio run wdio.conf.ts --watch",
    "e2e": "wdio run wdio.conf.ts",
    "e2e:headless": "cross-env HEADLESS=true wdio run wdio.conf.ts",
    "e2e:debug": "cross-env HEADLESS=true DEBUG_TESTS=true wdio run wdio.conf.ts",
    "e2e:smoke": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env HEADLESS=true TEST_TAGS='@smoke' wdio run wdio.conf.ts\"",
    "e2e:core": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env HEADLESS=true TEST_TAGS='@core' wdio run wdio.conf.ts\"",
    "e2e:core:auth": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env HEADLESS=true TEST_TAGS='@core and @auth' wdio run wdio.conf.ts\"",
    "e2e:core:upload": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env HEADLESS=true TEST_TAGS='@core and @upload' wdio run wdio.conf.ts\"",
    "e2e:core:config": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env HEADLESS=true TEST_TAGS='@core and @config' wdio run wdio.conf.ts\"",
    "e2e:config": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env HEADLESS=true TEST_TAGS='@config' wdio run wdio.conf.ts\"",
    "e2e:config:smoke": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env HEADLESS=true TEST_TAGS='@config and @smoke' wdio run wdio.conf.ts\"",
    "e2e:config:validation": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env HEADLESS=true TEST_TAGS='@config and @validation' wdio run wdio.conf.ts\"",
    "e2e:config:date-range": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env HEADLESS=true TEST_TAGS='@config and @date-range' wdio run wdio.conf.ts\"",
    "e2e:config:ui": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env HEADLESS=true TEST_TAGS='@config and @ui' wdio run wdio.conf.ts\"",
    "e2e:config:testing": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env HEADLESS=true TEST_TAGS='@config and @testing' wdio run wdio.conf.ts\"",
    "e2e:auth": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env HEADLESS=true TEST_TAGS='@auth' wdio run wdio.conf.ts\"",
    "e2e:auth:smoke": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env HEADLESS=true TEST_TAGS='@auth and @smoke' wdio run wdio.conf.ts\"",
    "e2e:auth:validation": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env HEADLESS=true TEST_TAGS='@auth and @validation' wdio run wdio.conf.ts\"",
    "e2e:auth:guards": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env HEADLESS=true TEST_TAGS='@auth and @guards' wdio run wdio.conf.ts\"",
    "e2e:upload": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env HEADLESS=true TEST_TAGS='@upload' wdio run wdio.conf.ts\"",
    "e2e:upload:smoke": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env HEADLESS=true TEST_TAGS='@upload and @smoke' wdio run wdio.conf.ts\"",
    "e2e:upload:validation": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env HEADLESS=true TEST_TAGS='@upload and @validation' wdio run wdio.conf.ts\"",
    "e2e:web": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env PLATFORM=web HEADLESS=true TEST_TAGS='@web or @core' wdio run wdio.web.conf.ts\"",
    "e2e:electron": "cross-env PLATFORM=electron wdio run wdio.electron.conf.ts",
    "e2e:electron:build": "npm run pack:win:dir && cross-env PLATFORM=electron TEST_TAGS='@electron or @core' wdio run wdio.electron.conf.ts",
    "e2e:integration": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env HEADLESS=true TEST_TAGS='@integration' wdio run wdio.conf.ts\"",
    "e2e:integration:full": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env HEADLESS=true TEST_TAGS='@integration and @serial' wdio run wdio.conf.ts\"",
    "e2e:parallel": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env HEADLESS=true TEST_TAGS='@parallel' wdio run wdio.conf.ts --maxInstances 4\"",
    "e2e:regression": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env HEADLESS=true TEST_TAGS='@regression or not @skip' wdio run wdio.conf.ts\"",
    "e2e:ci:web": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env CI=true PLATFORM=web HEADLESS=true wdio run wdio.web.conf.ts\"",
    "e2e:ci:electron": "cross-env CI=true PLATFORM=electron npm run e2e:electron:build",
    "allure:generate": "npx allure generate allure-results",
    "allure:open": "npx allure open allure-report",
    "allure:serve": "npx allure serve allure-results",
    "allure:filter-hooks": "node scripts/filter-allure-hooks.js",
    "allure:test-filter": "node scripts/test-hook-filter.js",
    "allure:badge": "node scripts/generate-allure-badge.js",
    "test:e2e:allure": "npm run test:e2e && npm run allure:generate",
    "test:e2e:headless:allure": "npm run test:e2e:headless && npm run allure:generate",
    "test:e2e:ci:full": "concurrently --kill-others --success first \"ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && npm run test:e2e:ci\"",
    "test:e2e:skip-failing": "wdio run wdio.conf.ts --cucumberOpts.tags='not @skip'",
    "test:e2e:only-passing": "wdio run wdio.conf.ts --cucumberOpts.tags='not @skip'",
    "test:e2e:run-all": "wdio run wdio.conf.ts --cucumberOpts.tags=''",
    "test:e2e:shard": "mkdir -p logs/metrics logs/drivers allure-results && timeout 300 concurrently --kill-others --success first \"./node_modules/.bin/ng serve flock-mirage --configuration=test --port=4200 --host=0.0.0.0\" \"wait-on http://localhost:4200 && cross-env CI=true HEADLESS=true SHARDED_TESTS=true wdio run wdio.conf.ts --shard=${SHARD}/${TOTAL_SHARDS}\"",
    "test:all": "npm run test:ci && npm run test:e2e:ci",
    "analyze:metrics": "node scripts/analyze-test-metrics.js",
    "analyze:metrics:latest": "node scripts/analyze-test-metrics.js $(ls -t logs/metrics/test-metrics-*.json | head -1)",
    "analyze:timeouts": "node scripts/analyze-timeout-telemetry.js",
    "analyze:timeouts:latest": "node scripts/analyze-timeout-telemetry.js",
    "analyze:e2e": "node scripts/analyze-e2e-complexity.js",
    "analyze:timeouts:ci": "node scripts/analyze-ci-timeouts.js",
    "lint": "ng lint",
    "lint:fix": "ng lint --fix",
    "lint:shared": "ng lint shared",
    "lint:shared:fix": "ng lint shared --fix",
    "lint:flock-native": "ng lint flock-native",
    "lint:flock-mirage": "ng lint flock-mirage",
    "lint:flock-murmur": "ng lint flock-murmur",
    "lint:all": "npm run lint:shared && npm run lint:flock-native && npm run lint:flock-mirage && npm run lint:flock-murmur",
    "agent:build": "docker build -f docker/Dockerfile.background-agent -t cursor-background-agent:latest .",
    "agent:run": "docker run --rm -it -v $PWD:/workspace cursor-background-agent:latest",
    "agent:run:auth": "docker run --rm -it -e GH_TOKEN=$GH_TOKEN -v $PWD:/workspace cursor-background-agent:latest bash -lc 'gh auth status && gh repo view --json nameWithOwner,visibility'",
    "start:native": "concurrently --kill-others --success first \"npx ng serve flock-native --port=4201\" \"wait-on http://localhost:4201 && electron projects/flock-native/electron/main.js\"",
    "build:native": "node projects/flock-native/scripts/create-icon.js && npx ng build flock-native --configuration=production",
    "sentry:upload:native": "sentry-cli sourcemaps upload --org $SENTRY_ORG --project flock-native --release $SENTRY_RELEASE dist/flock-native/browser/",
    "sentry:upload:mirage": "sentry-cli sourcemaps upload --org $SENTRY_ORG --project flock-mirage --release $SENTRY_RELEASE dist/flock-mirage/browser/",
    "sentry:upload:all": "npm run sentry:upload:native && npm run sentry:upload:mirage",
    "electron:dev": "electron projects/flock-native/electron/main.js",
    "electron:prod": "cross-env ELECTRON_IS_PACKAGED=1 electron projects/flock-native/electron/main.js",
    "build:native:prod": "npm run build:native",
    "pack:win": "npm run clean:electron && npm run build:native:prod && electron-builder --win",
    "pack:win:dir": "npm run clean:electron && npm run build:native && electron-builder --win --dir",
    "pack:win:docker": "bash scripts/docker-build-electron.sh",
    "electron:docker:build": "electron-builder --win --dir --config.directories.output=/app/dist/electron",
    "pack:mac": "npm run clean:electron && npm run build:native:prod && electron-builder --mac",
    "pack:linux": "npm run clean:electron && npm run build:native:prod && electron-builder --linux",
    "pack:all": "npm run clean:electron && npm run build:native:prod && electron-builder -mwl",
    "clean": "node scripts/clean.js",
    "clean:dist": "rimraf dist",
    "clean:electron": "node scripts/clean-electron.js",
    "clean:coverage": "rimraf coverage allure-results allure-report",
    "clean:logs": "rimraf logs",
    "clean:node_modules": "rimraf node_modules",
    "clean:all": "node scripts/clean.js && npm run clean:node_modules",
    "rebuild": "npm run clean:all && npm install",
    "logs:tail": "bash scripts/find-electron-log.sh 200"
  },
  "prettier": {
    "overrides": [
      {
        "files": "*.html",
        "options": {
          "parser": "angular"
        }
      }
    ]
  },
  "build": {
    "appId": "io.communitystream.flock.native",
    "productName": "Flock Native",
    "copyright": "Copyright © 2025 CommunityStream.io",
    "directories": {
      "buildResources": "projects/flock-native/build",
      "output": "dist/electron"
    },
    "files": [
      "dist/flock-native/**/*",
      "projects/flock-native/electron/**/*",
      "node_modules/**/*",
      "package.json",
      "!projects/flock-native/transfer/**/*"
    ],
    "asar": false,
    "extraResources": [],
    "buildDependenciesFromSource": false,
    "extraMetadata": {
      "main": "projects/flock-native/electron/main.js"
    },
    "win": {
      "target": [
        {
          "target": "portable",
          "arch": [
            "x64"
          ]
        }
      ],
      "icon": "projects/flock-native/build/icon.ico",
      "artifactName": "Flock-Native-${version}.${ext}",
      "signtoolOptions": {
        "publisherName": "CommunityStream.io"
      },
      "sign": null,
      "signDlls": false
    },
    "mac": {
      "category": "public.app-category.utilities",
      "target": [
        {
          "target": "dmg",
          "arch": [
            "x64",
            "arm64"
          ]
        },
        {
          "target": "zip",
          "arch": [
            "x64",
            "arm64"
          ]
        }
      ],
      "icon": "projects/flock-native/build/icon.png"
    },
    "linux": {
      "target": [
        {
          "target": "AppImage",
          "arch": [
            "x64"
          ]
        },
        {
          "target": "deb",
          "arch": [
            "x64"
          ]
        },
        {
          "target": "rpm",
          "arch": [
            "x64"
          ]
        }
      ],
      "icon": "projects/flock-native/build/icons",
      "category": "Utility",
      "maintainer": "CommunityStream.io",
      "vendor": "CommunityStream.io",
      "description": "Migrate Instagram data to Bluesky with native desktop power"
    },
    "publish": {
      "provider": "github",
      "owner": "CommunityStream-io",
      "repo": "flock"
    }
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "^20.1.7",
    "@angular/cdk": "^20.1.6",
    "@angular/common": "^20.1.0",
    "@angular/compiler": "^20.1.0",
    "@angular/core": "^20.1.0",
    "@angular/forms": "^20.1.0",
    "@angular/material": "^20.1.6",
    "@angular/platform-browser": "^20.1.0",
    "@angular/router": "^20.1.0",
    "@fortawesome/angular-fontawesome": "^3.0.0",
    "@fortawesome/fontawesome-svg-core": "^7.1.0",
    "@fortawesome/free-brands-svg-icons": "^7.1.0",
    "@fortawesome/free-solid-svg-icons": "^7.1.0",
    "@sentry/angular": "^10.19.0",
    "@sentry/browser": "^10.19.0",
    "@sentry/electron": "^7.1.1",
    "@straiforos/instagramtobluesky": "^0.7.8",
    "dotenv": "^17.2.3",
    "electron-log": "^5.1.0",
    "extract-zip": "^2.0.1",
    "rxjs": "~7.8.0",
    "sharp": "^0.34.4",
    "tslib": "^2.3.0",
    "zone.js": "~0.15.0"
  },
  "devDependencies": {
    "@angular/cli": "^20.1.5",
    "@angular/build": "^20.1.6",
    "@angular/compiler-cli": "^20.1.0",
    "@angular-eslint/builder": "20.2.0",
    "@angular-eslint/eslint-plugin": "20.2.0",
    "@angular-eslint/eslint-plugin-template": "20.2.0",
    "@angular-eslint/schematics": "20.2.0",
    "@angular-eslint/template-parser": "20.2.0",
    "@sentry/cli": "^2.30.0",
    "@types/jasmine": "~5.1.0",
    "@types/node": "^24.3.0",
    "@typescript-eslint/eslint-plugin": "7.11.0",
    "@typescript-eslint/parser": "7.11.0",
    "@wdio/allure-reporter": "^9.19.1",
    "@wdio/cucumber-framework": "^9.19.1",
    "@wdio/devtools-service": "^8.42.0",
    "@wdio/local-runner": "^9.19.1",
    "@wdio/spec-reporter": "^9.19.1",
    "@wdio/types": "^9.19.1",
    "allure-commandline": "^2.34.1",
    "angular-eslint": "^20.2.0",
    "chromedriver": "^130.0.4",
    "concurrently": "^9.2.0",
    "cross-env": "^10.0.0",
    "devtools": "^8.42.0",
    "electron": "^33.2.0",
    "electron-builder": "^25.1.8",
    "eslint": "8.57.1",
    "eslint-plugin-import": "^2.32.0",
    "expect-webdriverio": "^5.4.2",
    "glob": "^11.0.3",
    "http-server": "^14.1.1",
    "jasmine-core": "~5.8.0",
    "karma": "~6.4.0",
    "karma-chrome-launcher": "~3.2.0",
    "karma-coverage": "~2.2.0",
    "karma-jasmine": "~5.1.0",
    "karma-jasmine-html-reporter": "~2.1.0",
    "ng-packagr": "^20.1.0",
    "pino": "^9.9.5",
    "pino-pretty": "^13.1.1",
    "puppeteer": "^24.22.0",
    "rimraf": "^6.0.1",
    "typescript": "~5.8.2",
    "wait-on": "^8.0.4",
    "wdio-electron-service": "^9.1.2",
    "webdriverio-mcp": "^1.0.3"
  }
}
