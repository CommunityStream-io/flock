name: Release Flock Native

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from tag
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event_name == 'workflow_dispatch' && format('v{0}', github.event.inputs.version) || github.ref }}
          release_name: Flock Native v${{ steps.get_version.outputs.version }}
          draft: true
          prerelease: false
          body: |
            # Flock Native v${{ steps.get_version.outputs.version }}
            
            ## Downloads
            
            ### Windows
            - **Installer**: `Flock-Native-Setup-${{ steps.get_version.outputs.version }}.exe` (Recommended)
            - **Portable**: `Flock-Native-${{ steps.get_version.outputs.version }}.exe` (No installation required)
            - **ZIP Archive**: `Flock-Native-${{ steps.get_version.outputs.version }}-win.zip`
            
            ### macOS
            - **DMG**: `Flock-Native-${{ steps.get_version.outputs.version }}-universal.dmg` (Recommended)
            - **ZIP Archive**: `Flock-Native-${{ steps.get_version.outputs.version }}-mac.zip`
            
            ### Linux
            - **AppImage**: `Flock-Native-${{ steps.get_version.outputs.version }}.AppImage` (Universal, no installation)
            - **DEB Package**: `flock-native_${{ steps.get_version.outputs.version }}_amd64.deb` (Debian/Ubuntu)
            - **RPM Package**: `flock-native-${{ steps.get_version.outputs.version }}.x86_64.rpm` (Fedora/RHEL)
            
            ## Installation Instructions
            
            See the [installation guide](https://github.com/CommunityStream-io/flock/blob/main/INSTALLATION.md) for detailed platform-specific instructions.
            
            ## What's New
            
            _Release notes will be added here before publishing._
            
            ## System Requirements
            
            - **Windows**: Windows 10 or later (64-bit)
            - **macOS**: macOS 10.15 (Catalina) or later
            - **Linux**: Ubuntu 20.04+ or equivalent

  build-windows:
    name: Build Windows
    needs: create-release
    runs-on: windows-latest
    env:
      PACKAGE_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24.5.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Angular app
        run: npm run build:native

      - name: Build and publish Windows installers
        run: npx electron-builder --win --publish always
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    name: Build macOS
    needs: create-release
    runs-on: macos-latest
    env:
      PACKAGE_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24.5.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Angular app
        run: npm run build:native

      - name: Build and publish macOS packages
        run: npx electron-builder --mac --publish always
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-linux:
    name: Build Linux
    needs: create-release
    runs-on: ubuntu-latest
    env:
      PACKAGE_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24.5.0'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          sudo apt-get update
          sudo apt-get install -y rpm

      - name: Build Angular app
        run: npm run build:native

      - name: Build and publish Linux packages
        run: npx electron-builder --linux --publish always
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

